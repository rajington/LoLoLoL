
doctype 5
html
  head
    title Champions | SETM
    meta(name='viewport', content='width=device-width, initial-scale=1')
    link(rel='stylesheet', href='//maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css')
    link(rel='stylesheet', href='//cdn.datatables.net/plug-ins/1.10.6/integration/bootstrap/3/dataTables.bootstrap.css')
    link(rel='stylesheet', href='//cdn.datatables.net/colvis/1.1.2/css/dataTables.colVis.css')
    link(rel='stylesheet', href='css/tables.css')
    script(src='//code.jquery.com/jquery-1.11.1.min.js')
    script(src='//maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js')
    script(src='//cdn.datatables.net/1.10.6/js/jquery.dataTables.min.js')
    script(src='//cdn.datatables.net/plug-ins/1.10.6/integration/bootstrap/3/dataTables.bootstrap.js')
    script(src='//cdn.datatables.net/colvis/1.1.2/js/dataTables.colVis.min.js')
    script(src='//cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js')
    script(src='//cdnjs.cloudflare.com/ajax/libs/underscore.string/3.0.3/underscore.string.min.js')

  body
    div(class='container')
      table(class='table table-striped table-bordered')
  script(type='text/javascript')
    $(document).ready(function() {
      $.getJSON( 'data', function( serverData ) {
        var renderers = {};
        renderers['perGame'] = function(data){
          return data.toFixed(2)+'/game';
        }
        renderers['totalSentientKillsPerGame'] = function(data, type, row){
          return renderers.perGame(row.neutralMinionsKilled + row.minionsKilled + row.dragonKills + row.baronKills);
        }
        renderers['name'] = function(data, type, row){
          return "<img src='http://ddragon.leagueoflegends.com/cdn/5.7.2/img/champion/" + row.image + "'>" + data;
        }

        var columns = _.map(serverData.metrics, function(metric){
          var dtColumn = {};
          dtColumn.data = metric.key;

          // get the title from the database or the humanized version of the key
          dtColumn.title = metric.title || s(metric.key).humanize().titleize().value();
          if(!metric.important){
            dtColumn.visible = false;
          }
          if(metric.type){
            dtColumn.render = renderers[metric.type];
            dtColumn.className = metric.type;
          }
          return dtColumn;
        });

        console.log(columns);
        $('table').dataTable({
          order: [[1, 'desc']],
          deferRender: true,
          data: serverData.champions,
          columns: columns
        });
      });
    });
